<application>
  <component name="StudioBotSettings">
    <option name="onboardedVersion" value="3" />
    <option name="queryHistory">
      <list>
        <historyEntry timestamp="1747121021147">还是使用最开始的方案实现VanSideBar，并且内容使用Layout 实现</historyEntry>
        <historyEntry timestamp="1747117343424">参照TabRowScope修改VanSidebar组件</historyEntry>
        <historyEntry timestamp="1747116700273">阅读下面的代码，以为使用了key值，所以每次切换之后，所有的item都重新绘制了，如何做到值重新绘制得到选中的和失去选中的
@Composable
fun VanSidebar(
    selectedIndex: Int,
    onChange: (Int) -&gt; Unit,
    modifier: Modifier = Modifier,
    content: @Composable VanSidebarScope.() -&gt; Unit
) {
    Column(modifier = modifier.background(Color.White)) {
        val scope = VanSidebarScopeImpl(selectedIndex, onChange)
        scope.content()
    }
}

interface VanSidebarScope {
    @Composable
    fun VanSideBarItem(title: String)
}

private class VanSidebarScopeImpl(
    private val selectedIndex: Int,
    private val onSelect: (Int) -&gt; Unit,
) : VanSidebarScope {

    private var index = 0
    @Composable
    override fun VanSideBarItem(title: String) {
        val currentIndex = index++
        key(currentIndex+selectedIndex) {
            Log.e(&quot;DONG&quot;, &quot;🚀 ~ VanSideBarItem ~ recomposition currentIndex+selectedIndex: ${currentIndex+selectedIndex}&quot;)
            val isSelected = selectedIndex == currentIndex

            val backgroundColor by animateColorAsState(
                if (isSelected) Color.LightGray else Color.Transparent,
                label = &quot;SidebarItemBg&quot;
            )

            Box(
                modifier = Modifier
                    .width(90.dp)
                    .clickable { onSelect(currentIndex) }
                    .background(backgroundColor)
                    .padding(16.dp)
            ) {
                Text(
                    text = title,
                    color = if (isSelected) Color.Blue else Color.Black
                )
            }
        }
    }
}</historyEntry>
      </list>
    </option>
  </component>
</application>